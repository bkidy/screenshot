version: '3.8'

services:
  screenshot-service:
    # 使用本地构建的镜像
    image: screenshot-service:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile
    init: true
    cap_add:
      - SYS_ADMIN
    container_name: screenshot-service
    restart: unless-stopped
    
    # 共享内存配置 - 2H2G VPS优化
    shm_size: 512m
    
    # 端口映射
    ports:
      - "3002:3002"
    
    # 工作目录和用户
    working_dir: /app
    user: "pptruser"
    
    # 优化后的环境变量
    environment:
      - NODE_ENV=production
      - PORT=3002
      - LOG_LEVEL=info
      - API_KEY=${API_KEY:-disabled}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      
      # 性能优化环境变量 - 2H2G VPS适配
      - NODE_OPTIONS=--max-old-space-size=768
      - UV_THREADPOOL_SIZE=8
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      
      # 性能监控
      - LOG_PERFORMANCE=${LOG_PERFORMANCE:-false}
    
    # 环境变量文件
    env_file:
      - ../.env
    
    # 文件挂载 - 只挂载日志目录
    volumes:
      - screenshot-logs:/var/log/screenshot-service
      - /etc/localtime:/etc/localtime:ro
      # 临时文件目录优化
      - /tmp:/tmp
    
    # 2H2G VPS资源限制
    deploy:
      resources:
        limits:
          memory: 1.5G  # 预留0.5G给系统
          cpus: '1.5'   # 预留0.5H给系统
        reservations:
          memory: 512M  # 降低最小内存要求
          cpus: '0.3'   # 降低最小CPU要求
    
    # 优化后的健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # 增加启动等待时间
    
    # 性能优化的系统配置
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    
    # 标签
    labels:
      - "com.screenshot-service.description=Optimized Screenshot Service"
      - "com.screenshot-service.version=1.1.0"
      - "com.screenshot-service.performance=optimized"

# 卷配置
volumes:
  screenshot-logs:
    driver: local 